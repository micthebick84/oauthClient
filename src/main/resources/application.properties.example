spring.application.name=oauth2Client

#registration
spring.security.oauth2.client.registration.micthebick.client-name=${CLIENT_NAME}
spring.security.oauth2.client.registration.micthebick.client-id=${CLIENT_ID}
spring.security.oauth2.client.registration.micthebick.client-secret=${CLIENT_SECRET}
spring.security.oauth2.client.registration.micthebick.provider=${CUSTOM_PROVIDER}

#http://localhost:8080/login/oauth2/code/${CLIENT_NAME}
spring.security.oauth2.client.registration.micthebick.redirect-uri=${REDIRECT_URI}
spring.security.oauth2.client.registration.micthebick.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.micthebick.scope=${CUSTOM_SCOPE}

#provider
spring.security.oauth2.client.provider.micthebick.authorization-uri=http://localhost:9000/oauth2/authorize
spring.security.oauth2.client.provider.micthebick.token-uri=http://localhost:9000/oauth2/token
spring.security.oauth2.client.provider.micthebick.user-info-uri=http://localhost:9000/oauth2/jwks
spring.security.oauth2.client.provider.micthebick.user-name-attribute=response

#registration
spring.security.oauth2.client.registration.naver.client-name=naver
spring.security.oauth2.client.registration.naver.client-id=${NAVER_CLIENT_ID}
spring.security.oauth2.client.registration.naver.client-secret=${NAVER_CLIENT_SECRET}
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8080/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email

#provider
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

#registration
spring.security.oauth2.client.registration.google.client-name=google
#구글 클라우드 발급 이후 진행
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.scope=profile,email


spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/your_database
spring.datasource.username=your_username
spring.datasource.password=your_password


spring.jpa.hibernate.ddl-auto=none
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

spring.jwt.secret=vmfhaltmskdlstkfkdgodyroqkfwkdbalroqkfwkdbalaaaaaaaaaaaaaaaabbbbb